name: ci
on: [push, pull_request]
permissions:
  pull-requests: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.work
          check-latest: true
          cache: true
      - run: go build -v ./...
  lint:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.work
          check-latest: true
          cache: false
      - uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.work
          check-latest: true
          cache: false
      - run: |
          go test \
          -count=1 \
          -covermode=atomic \
          -coverpkg=./... \
          -coverprofile=./cover.out \
          -failfast \
          -race \
          -shuffle=on \
          -v \
          ./...
      - uses: actions/upload-artifact@v4
        with:
          name: cover.out
          path: cover.out
          if-no-files-found: error
  check-coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: cover.out
      - uses: dawidd6/action-download-artifact@v9
        id: download-main-breakdown
        with:
          branch: main
          workflow_conclusion: success
          name: main.breakdown
          if_no_artifact_found: warn
      - uses: vladopajic/go-test-coverage@v2
        id: coverage
        continue-on-error: true # Should fail after coverage comment is posted
        with:
          config: ./.github/.testcoverage.yml
          git-branch: badges
          git-token: ${{ github.ref_name == 'main' && secrets.GITHUB_TOKEN || '' }}
          breakdown-file-name: ${{ github.ref_name == 'main' && 'main.breakdown' || '' }}
          diff-base-breakdown-file-name: ${{ steps.download-main-breakdown.outputs.found_artifact == 'true' && 'main.breakdown' || '' }}
      - uses: actions/upload-artifact@v4
        if: github.ref_name == 'main'
        with:
          name: main.breakdown
          path: main.breakdown
          if-no-files-found: error
      - uses: thollander/actions-comment-pull-request@v3
        if: github.event_name == 'pull_request'
        with:
          comment-tag: coverage-report
          message: |
            go-test-coverage report:
            ```
            ${{ fromJSON(steps.coverage.outputs.report) }}```
      - name: "fail on coverage"
        if: steps.coverage.outcome == 'failure'
        shell: bash
        run: echo "coverage check failed" && exit 1
  govulncheck:
    runs-on: ubuntu-latest
    steps:
      - uses: golang/govulncheck-action@v1
        with:
          go-version-file: go.work
          check-latest: true
          go-package: ./...
